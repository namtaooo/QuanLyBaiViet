@model QuanLyBaiViet.Models.LoginViewModel
@{
	ViewBag.Title = "Đăng nhập";
}
@if (TempData["AlertMessage"] != null)
{
	<div class="alert alert-success alert-dismissible fade show" role="alert">
		@TempData["AlertMessage"]
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>

	</div>
}
<div class="container mt-5">
	<div class="row justify-content-center">
		<div class="col-md-5">
			<div class="card shadow-sm">
				<div class="card-header bg-success text-white">
					<h3 class="mb-0">Đăng nhập</h3>

				</div>
				<div class="card-body">
					@using (Html.BeginForm("Login","Account",FormMethod.Post,new {@class = "needs-validation",novalidate ="novalidate"}))
					{
						@Html.AntiForgeryToken()
						@Html.ValidationSummary(true,"", new {@class ="alert alert-danger"})

						<div class="mb-3">
							@Html.LabelFor(m => m.UserName, new {@class = "form-label"})
							@Html.TextBoxFor(m => m.UserName, new {@class = "form-control", placeholder ="Nhập username"})
							@Html.ValidationMessageFor(m => m.UserName,"", new {@class="text-danger"})
						</div>
						<div class="mb-3">
							@Html.LabelFor(m => m.Password, new {@class ="form-label"})
							@Html.TextBoxFor(m => m.Password, new {@class ="form-control", placeholder ="Nhập mật khẩu"})
							@Html.ValidationMessageFor(m => m.Password,"", new {@class ="text-danger"})
						</div>
						<button type="submit" class="btn btn-success w-100">Đăng nhập</button>
					}

				</div>
			</div>
		</div>

	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}